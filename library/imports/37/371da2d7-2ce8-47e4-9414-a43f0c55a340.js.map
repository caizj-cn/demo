{"version":3,"sources":["assets\\Script\\component\\CameraFollow.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAA8C;AAE9C,OAAO;AACD,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA0C,gCAAY;IADtD;QAAA,qEA2CC;QAvCG,YAAM,GAAW,IAAI,CAAC;QAGtB,SAAG,GAAW,IAAI,CAAC;;IAoCvB,CAAC;IA5BG,6BAAM,GAAN;QAEI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG;YAAE,OAAO;QACtC,IAAK,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAChD,IAAG,MAAM;YAAC,MAAM,CAAC,eAAe,EAAE,CAAC;QAEnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC;QAEpD,qBAAW,CAAC,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,iCAAU,GAAV,UAAY,EAAE;QAEV,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO;QACzB,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChE,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI;YAAE,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;aAC5C,IAAI,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI;YAAE,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtD,IAAI,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI;YAAE,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;aAC5C,IAAI,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI;YAAE,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC/B,qBAAW,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC;IAC7C,CAAC;IAtCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACI;IAGtB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;6CACC;IANF,YAAY;QADhC,OAAO;OACa,YAAY,CA0ChC;IAAD,mBAAC;CA1CD,AA0CC,CA1CyC,EAAE,CAAC,SAAS,GA0CrD;kBA1CoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import GameManager from \"../game/gameManager\";\r\n\r\n//摄像机跟随\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CameraFollow extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    target:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    map:cc.Node = null;\r\n\r\n    private mapRect:cc.Rect;\r\n    private minX:number;\r\n    private maxX:number;\r\n    private minY:number;\r\n    private maxY:number;\r\n\r\n    onLoad () \r\n    {\r\n        if (!this.target || !this.map) return;\r\n        let  widget = this.node.getComponent(cc.Widget);\r\n        if(widget)widget.updateAlignment();\r\n        \r\n        this.mapRect = this.map.getBoundingBox();\r\n        this.minX = 0;\r\n        this.maxX = this.mapRect.width - cc.winSize.width;\r\n        this.minY = 0;\r\n        this.maxY = this.mapRect.height - cc.winSize.height;\r\n\r\n        GameManager.instance.cameraPos = cc.v2(this.node.x,this.node.y);\r\n    }\r\n\r\n    lateUpdate (dt) \r\n    {\r\n        if (!this.target) return;\r\n        let targetPos = this.target.convertToWorldSpaceAR(cc.Vec2.ZERO);\r\n        let nodePos = this.node.parent.convertToNodeSpaceAR(targetPos);\r\n        if (nodePos.x < this.minX) nodePos.x = this.minX;\r\n        else if (nodePos.x > this.maxX) nodePos.x = this.maxX;\r\n\r\n        if (nodePos.y < this.minY) nodePos.y = this.minY;\r\n        else if (nodePos.y > this.maxY) nodePos.y = this.maxY;\r\n        this.node.setPosition(nodePos);\r\n        GameManager.instance.cameraPos = nodePos;\r\n    }\r\n}\r\n"]}