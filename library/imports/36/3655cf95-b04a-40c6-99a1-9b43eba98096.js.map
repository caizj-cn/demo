{"version":3,"sources":["assets\\Script\\component\\SceenAdapter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gEAA2D;AAC3D,oDAA+C;AAC/C,mDAA8C;AAExC,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAE1C,SAAS;AAET;IAA0C,gCAAY;IAAtD;;IAqDA,CAAC;IAnDG,6BAAM,GAAN;QAAA,iBAMC;QAJG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACtB,KAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,+BAAQ,GAAR;QAEI,sBAAY,CAAC,cAAc,CAAC,mBAAS,CAAC,WAAW,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,8BAAO,GAAP;QAEI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAA;QACrB,SAAS;QACT,IAAI,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC;QACjF,OAAO;QACP,IAAI,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACzG,YAAY;QACZ,IAAI,WAAW,IAAI,CAAC,EAAE;YAClB,aAAa;YACb,IAAI,WAAW,IAAI,WAAW,EAAE;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;iBAAM;gBACH,iBAAiB;gBACjB,mCAAmC;gBACnC,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;SACJ;aAAM;YACH,aAAa;YACb,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACJ,CAAC;IAED,mCAAY,GAAZ;QAEI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;QACpC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC;QACpC,qBAAW,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC;IAEnH,CAAC;IAED,kCAAW,GAAX;QAEI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;QACrC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;QACnC,qBAAW,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC;IACjH,CAAC;IApDgB,YAAY;QADhC,OAAO;OACa,YAAY,CAqDhC;IAAD,mBAAC;CArDD,AAqDC,CArDyC,EAAE,CAAC,SAAS,GAqDrD;kBArDoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import MsgCallUtils from \"../framewrok/utils/MsgCallUtils\";\r\nimport GameEvent from \"../game/data/GameEvent\";\r\nimport GameManager from \"../game/gameManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n//屏幕分辨率适配\r\n@ccclass\r\nexport default class SceenAdapter extends cc.Component\r\n{\r\n    onLoad()\r\n    {\r\n        cc.view.setResizeCallback(() => {\r\n            this.onResize();\r\n        });\r\n        this.adapter();\r\n    }\r\n\r\n    onResize()\r\n    {\r\n        MsgCallUtils.notifyObserver(GameEvent.VIEW_RESIZE);\r\n        this.adapter();\r\n    }\r\n\r\n    adapter()\r\n    {\r\n        cc.view.getFrameSize\r\n       // 实际屏幕比例\r\n       let screenRatio = cc.view.getCanvasSize().width / cc.view.getCanvasSize().height;\r\n       // 设计比例\r\n       let designRatio = cc.Canvas.instance.designResolution.width / cc.Canvas.instance.designResolution.height;\r\n       // 判断实际屏幕宽高比\r\n       if (screenRatio <= 1) {\r\n           // 此时屏幕高度大于宽度\r\n           if (screenRatio <= designRatio) {\r\n               this.setFitWidth();\r\n           } else {\r\n               // 此时实际屏幕比例大于设计比例\r\n               // 为了保证纵向的游戏内容不受影响，应使用 fitHeight 模式\r\n               this.setFitHeight();\r\n           }\r\n       } else {\r\n           // 此时屏幕高度小于宽度\r\n           this.setFitHeight();\r\n       }\r\n    }\r\n\r\n    setFitHeight()\r\n    {\r\n        cc.Canvas.instance.fitHeight = true;\r\n        cc.Canvas.instance.fitWidth = false;\r\n        GameManager.instance.scaleFactor = cc.view.getCanvasSize().height / cc.Canvas.instance.designResolution.height;\r\n\r\n    }\r\n\r\n    setFitWidth()\r\n    {\r\n        cc.Canvas.instance.fitHeight = false;\r\n        cc.Canvas.instance.fitWidth = true;\r\n        GameManager.instance.scaleFactor = cc.view.getCanvasSize().width / cc.Canvas.instance.designResolution.width;\r\n    }\r\n}\r\n"]}