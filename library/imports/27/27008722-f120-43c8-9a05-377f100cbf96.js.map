{"version":3,"sources":["assets\\Script\\game\\role\\enemyControl.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGA,8CAAyC;AAEnC,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA0C,gCAAY;IADtD;QAAA,qEAkFC;QA9EG,eAAS,GAAU,GAAG,CAAC;QAEf,cAAQ,GAAU,CAAC,CAAC;QAGpB,aAAO,GAAW,KAAK,CAAC;;IAyEpC,CAAC;IAvEG,6BAAM,GAAN;QAGI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,qBAAW,CAAC,QAAQ,CAAC,OAAO,CAAC;IAChD,CAAC;IAED,gCAAS,GAAT;IAGA,CAAC;IAED,oBAAoB;IACpB,qCAAc,GAAd,UAAe,OAAO,EAAE,YAAY,EAAE,aAAa;IAGnD,CAAC;IACD,oBAAoB;IACpB,mCAAY,GAAZ,UAAc,OAAO,EAAE,YAAY,EAAE,aAAa;IAClD,CAAC;IACD,oBAAoB;IACpB,iCAAU,GAAV,UAAY,OAAO,EAAE,YAAY,EAAE,aAAa;IAChD,CAAC;IACD,mBAAmB;IACnB,kCAAW,GAAX,UAAa,OAAO,EAAE,YAAY,EAAE,aAAa;IACjD,CAAC;IAED,6BAAM,GAAN,UAAO,EAAE;QAEL,IAAI,qBAAW,CAAC,QAAQ,CAAC,MAAM;YAAE,OAAO;QACxC,IAAI,IAAI,CAAC,OAAO;YAAE,OAAO;QACzB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,aAAa,EAAE,EACxB,EAAE,KAAK;YACH,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,EACtB;gBACI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC5B;SACJ;aAED;YACI,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IAED,oCAAa,GAAb;QAEI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+BAAQ,GAAR;QAEI,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QACzC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QAC9B,IAAI,SAAS,CAAC,CAAC,IAAI,CAAC,EACpB;YACI,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE;gBACjB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE;oBACtC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;iBACnB;aACJ;iBACI;gBACD,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE;oBAC3D,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;iBACnB;aACJ;SACJ;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;IACzC,CAAC;IA5ED;QADC,QAAQ;mDACc;IAHN,YAAY;QADhC,OAAO;OACa,YAAY,CAiFhC;IAAD,mBAAC;CAjFD,AAiFC,CAjFyC,EAAE,CAAC,SAAS,GAiFrD;kBAjFoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import { RoleMoveDir, RoleState } from \"../data/GameConst\";\r\nimport MsgCallUtils from \"../../framewrok/utils/MsgCallUtils\";\r\nimport GameEvent from \"../data/GameEvent\";\r\nimport GameManager from \"../gameManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class EnemyControl extends cc.Component \r\n{\r\n    @property\r\n    moveSpeed:number = 300;\r\n\r\n    private sendTime:number = 0;\r\n    private body:cc.RigidBody;\r\n    private mapRect:cc.Rect;\r\n    private isDeath:boolean = false;\r\n\r\n    onLoad () \r\n    {\r\n\r\n        this.body = this.node.getComponent(cc.RigidBody);\r\n        this.mapRect = GameManager.instance.mapRect;\r\n    }\r\n\r\n    onDestroy() \r\n    {\r\n        \r\n    }\r\n\r\n    // 只在两个碰撞体开始接触时被调用一次\r\n    onBeginContact(contact, selfCollider, otherCollider)\r\n    {\r\n        \r\n    }\r\n    // 只在两个碰撞体结束接触时被调用一次\r\n    onEndContact (contact, selfCollider, otherCollider) {\r\n    }\r\n    // 每次将要处理碰撞体接触逻辑时被调用\r\n    onPreSolve (contact, selfCollider, otherCollider) {\r\n    }\r\n    // 每次处理完碰撞体接触逻辑时被调用\r\n    onPostSolve (contact, selfCollider, otherCollider) {\r\n    }\r\n\r\n    update(dt)\r\n    {\r\n        if (GameManager.instance.isOver) return;\r\n        if (this.isDeath) return;\r\n        this.sendTime += dt;\r\n        if (this.checkCanShoot()) \r\n        { //有目标\r\n            if (this.sendTime > 10)\r\n            {\r\n                this.sendTime = 0;\r\n                this.node.emit(\"attack\");\r\n            }\r\n        }\r\n        else \r\n        {\r\n            this.roleMove();\r\n        }\r\n    }\r\n\r\n    checkCanShoot()\r\n    {\r\n        return true;\r\n    }\r\n\r\n    roleMove()\r\n    {\r\n        let moveSpeed = this.body.linearVelocity;\r\n        moveSpeed.x = -this.moveSpeed;\r\n        if (moveSpeed.x != 0) \r\n        {\r\n            if (moveSpeed.x < 0) {\r\n                if (this.node.x < (this.mapRect.x + 150)) {\r\n                    moveSpeed.x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (this.node.x > (this.mapRect.x + this.mapRect.width - 150)) {\r\n                    moveSpeed.x = 0;\r\n                }\r\n            }\r\n        }\r\n        this.body.linearVelocity = moveSpeed;\r\n    }\r\n\r\n}\r\n"]}