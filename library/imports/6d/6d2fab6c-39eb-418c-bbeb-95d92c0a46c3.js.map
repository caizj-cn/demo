{"version":3,"sources":["assets\\Script\\game\\role\\roleControl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { RoleMoveDir, RoleState } from \"../data/GameConst\";\r\nimport MsgCallUtils from \"../../framewrok/utils/MsgCallUtils\";\r\nimport GameEvent from \"../data/GameEvent\";\r\nimport GameManager from \"../gameManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RoleControl extends cc.Component \r\n{\r\n    @property\r\n    moveSpeed:number = 300;\r\n    @property\r\n    jumpSpeed:number = 500;\r\n    @property\r\n    jumpCount:number = 2;//可连续跳跃次数\r\n\r\n    private moveDir:number;//当前朝向\r\n\r\n    private roleState:number = RoleState.idel;\r\n    private jumping:boolean = false;\r\n    private body:cc.RigidBody;\r\n    private mapRect:cc.Rect;\r\n    private isDeath:boolean = false;\r\n\r\n    onLoad () \r\n    {\r\n        this.moveDir = RoleMoveDir.none;\r\n        this.body = this.node.getComponent(cc.RigidBody);\r\n        this.mapRect = GameManager.instance.mapRect\r\n        MsgCallUtils.addObserver(GameEvent.SPINE_INITED,this,this.spineInited);\r\n    }\r\n\r\n    spineInited(msg:string,obj:object)\r\n    {\r\n        //监听键盘事件\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN,this.onKeyDown,this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP,this.onKeyUp,this);\r\n    }\r\n\r\n\r\n    onDestroy() \r\n    {\r\n        MsgCallUtils.removeObserver(GameEvent.SPINE_INITED,this,this.spineInited);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN,this.onKeyDown,this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP,this.onKeyUp,this);\r\n    }\r\n\r\n    // 只在两个碰撞体开始接触时被调用一次\r\n    onBeginContact(contact, selfCollider, otherCollider)\r\n    {\r\n       \r\n    }\r\n    // 只在两个碰撞体结束接触时被调用一次\r\n    onEndContact (contact, selfCollider, otherCollider) {\r\n    }\r\n    // 每次将要处理碰撞体接触逻辑时被调用\r\n    onPreSolve (contact, selfCollider, otherCollider) {\r\n    }\r\n    // 每次处理完碰撞体接触逻辑时被调用\r\n    onPostSolve (contact, selfCollider, otherCollider) {\r\n    }\r\n\r\n    onKeyDown(event) \r\n    {\r\n        switch (event.keyCode) \r\n        {\r\n            case cc.macro.KEY.left:\r\n            case cc.macro.KEY.a:\r\n                this.setDir(RoleMoveDir.left);\r\n                break;\r\n            case cc.macro.KEY.right:\r\n            case cc.macro.KEY.d:\r\n                this.setDir(RoleMoveDir.right);\r\n                break;\r\n            case cc.macro.KEY.up:\r\n            case cc.macro.KEY.w:\r\n                this.jumping = true;\r\n                break;\r\n            case cc.macro.KEY.enter:\r\n                this.node.emit(\"switchSkin\");\r\n                break;\r\n            case cc.macro.KEY.space:\r\n                this.node.emit(\"fight\");\r\n                break;\r\n        }\r\n        \r\n    }\r\n    onKeyUp(event)\r\n    {\r\n        var roleSpeed = this.body.linearVelocity;\r\n        switch (event.keyCode) \r\n        {\r\n            case cc.macro.KEY.left:\r\n            case cc.macro.KEY.a:\r\n                this.setDir(RoleMoveDir.none);\r\n                break;\r\n            case cc.macro.KEY.right:\r\n            case cc.macro.KEY.d:\r\n                this.setDir(RoleMoveDir.none);\r\n                break;\r\n            case cc.macro.KEY.up:\r\n            case cc.macro.KEY.w:\r\n                this.jumping = false;\r\n                break;\r\n            case cc.macro.KEY.enter:\r\n                // this.node.emit(\"switchSkin\");//更改方向\r\n                break;\r\n            case cc.macro.KEY.space:\r\n                // this.node.emit(\"switchSkin\");//更改方向\r\n                break;\r\n        }\r\n    }\r\n\r\n    update(dt)\r\n    {\r\n        if(this.isDeath)return;\r\n        if(GameManager.instance.isOver)return;\r\n        let moveSpeed = this.body.linearVelocity;\r\n        moveSpeed.x = this.moveDir*this.moveSpeed;\r\n        if (Math.abs(moveSpeed.y) < 1) {\r\n            this.jumpCount = 2;\r\n        }\r\n        if(this.jumpCount > 0 && this.jumping)\r\n        {\r\n            moveSpeed.y = this.jumpSpeed;\r\n            this.jumpCount--;\r\n        }\r\n        if(this.jumping)    \r\n        {\r\n            this.setState(RoleState.jump);\r\n        }\r\n        else\r\n        {\r\n            if(moveSpeed.x != 0)\r\n            {\r\n                this.setState(RoleState.walk);\r\n            }\r\n            else\r\n            {\r\n                this.setState(RoleState.idel);\r\n            }\r\n        }\r\n\r\n        if (moveSpeed.x != 0) \r\n        {\r\n            if (moveSpeed.x < 0) {\r\n                if (this.node.x < (this.mapRect.x + 150)) {\r\n                    moveSpeed.x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (this.node.x > (this.mapRect.x + this.mapRect.width - 150)) {\r\n                    moveSpeed.x = 0;\r\n                }\r\n            }\r\n        }\r\n        this.body.linearVelocity = moveSpeed;\r\n    }\r\n\r\n    //设置方向\r\n    setDir(value)\r\n    {\r\n        if(this.moveDir == value)return;\r\n        this.moveDir = value;\r\n        if(this.moveDir != RoleMoveDir.none)this.node.emit(\"changeDir\", this.moveDir);//更改方向\r\n    }\r\n\r\n    //设置角色动作\r\n    setState(value) \r\n    {\r\n        if (this.roleState == value) return;\r\n        this.roleState = value;\r\n        this.node.emit(\"changeState\", this.roleState);//更改动作\r\n        \r\n    }\r\n}\r\n"]}